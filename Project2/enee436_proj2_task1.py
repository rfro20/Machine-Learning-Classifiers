# -*- coding: utf-8 -*-
"""ENEE436_proj2_task1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VNBCe38s7b6_gSCYkHyLsRUnqtYg1b8g
"""

import tensorflow as tf
import numpy as np
from sklearn import svm

(x_train, y_train), (x_test, y_test) = tf.keras.datasets.mnist.load_data()

#Create an SVM Classifier
classifier = svm.SVC(C = 1, kernel='linear') # Linear Kernel

print(len(x_test))

x_train = np.reshape(x_train, (len(x_train), len(x_train[0]) ** 2))
x_test = np.reshape(x_test, (len(x_test), len(x_test[0]) ** 2))

x_train = x_train / 255.0
x_test = x_test / 255.0

#Train the model using the training sets
classifier.fit(x_train, y_train)

#Predict the response for test dataset
y_pred = classifier.predict(x_test)

sizes = [0] * 10
for num in y_test:
  sizes[num] += 1

successes = [0] * 10
for i in range(len(y_pred)):
  if y_pred[i] == y_test[i]:
      successes[y_pred[i]] += 1

for i in range(len(successes)):
  print("Accuracy when classifying " + str(i) + ": " + str(successes[i] / sizes[i] * 100) + "%")